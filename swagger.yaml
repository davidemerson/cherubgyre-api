openapi: 3.0.3
info:
  title: cherubgyre-api
  description: 
    "The cherubgyre-server API represents the interface to the back end of cherubgyre, an anonymous community defense social network."
  contact:
    name: Author
    email: d@cherubgyre.com
  license:
    name: GNU General Public License 3
    url: https://www.gnu.org/licenses/gpl-3.0-standalone.html
  version: 1.0.1

servers:
  - url: https://prod.cherubgyre.com/v1
    description: Production Server
    variables:
      user_id:
        default: 0192246a-be9c-777f-bc6f-267f8ce69d08
        description: a user ID
      port:
        enum:
          - '8443'
        default: '8443'
  - url: https://dev.cherubgyre.com/v1
    description: Development Server
    variables:
      user_id:
        default: 0192246a-be9c-777f-bc6f-267f8ce69d08
        description: a user ID
      port:
        enum:
          - '8443'
        default: '8443'

security:
  - bearerAuth: []

paths:
  /users/register:
    post:
      summary: Register a new user anonymously
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security: []  # This endpoint does not require authentication

  /users/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auth_token:
                  type: string
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  user_id:
                    type: string
      security: []  # No auth required for login

  /users/{user_id}/follow:
    post:
      summary: Follow another user
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
          description: ID of the user initiating the follow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowRequest'
      responses:
        '200':
          description: Follow successful

  /users/{user_id}/unfollow:
    delete:
      summary: Unfollow a user
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
          description: ID of the user initiating the unfollow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowRequest'
      responses:
        '200':
          description: Unfollow successful

  /users/{user_id}/status:
    post:
      summary: Update the user's status
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
          description: ID of the user whose status is being updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
      responses:
        '200':
          description: Status updated successfully

    get:
      summary: Get the user's latest status
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
          description: ID of the user whose status is being fetched
      responses:
        '200':
          description: User status fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'

  /users/{user_id}/duress:
    post:
      summary: Push duress status to followers
      description: Push a duress notification to all the user's followers.
      parameters:
        - in: path
          name: user_id
          schema:
            type: string
          required: true
          description: ID of the user pushing the duress status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuressStatus'
      responses:
        '200':
          description: Duress status pushed successfully
        '403':
          description: Forbidden, unauthorized access

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: Unique user ID
        username:
          type: string
          nullable: true
          description: Optional username

    FollowRequest:
      type: object
      properties:
        follower_id:
          type: string
          description: ID of the user who is following
        followee_id:
          type: string
          description: ID of the user being followed

    Status:
      type: object
      properties:
        location:
          type: string
          description: User's current location (coordinates)
        duress:
          type: boolean
          description: Whether the user is under duress
        duress_type:
          type: string
          description: The type of duress trigger, if user is under duress. Can be multiple values if multiple types were detected
          example: "accelerometer, duress code, duress timer"
        last_checkin:
          type: string
          format: date-time
          description: Timestamp of the last check-in

    DuressStatus:
      type: object
      properties:
        duress:
          type: boolean
          description: Whether the user is under duress
          example: true
        duress_type:
          type: string
          description: The type of duress trigger
          example: "accelerometer, duress code, duress timer"
        message:
          type: string
          description: Optional message about the duress state
          example: "cherub-gyre-chicago entered duress state"

externalDocs:
  url: https://nnix.com/projects/cherubgyre